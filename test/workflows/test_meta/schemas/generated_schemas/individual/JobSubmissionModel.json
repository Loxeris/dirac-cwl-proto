{
  "$defs": {
    "JobParameterModel": {
      "description": "Parameter of a job.",
      "properties": {
        "cwl": {
          "title": "Cwl",
          "type": "object"
        },
        "sandbox": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "title": "Sandbox"
        }
      },
      "required": [
        "sandbox",
        "cwl"
      ],
      "title": "JobParameterModel",
      "type": "object"
    },
    "MetadataDescriptor": {
      "additionalProperties": true,
      "description": "Metadata configuration for DIRAC jobs",
      "properties": {
        "experiment": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Experiment namespace (e.g., 'lhcb', 'ctao')",
          "title": "Experiment"
        },
        "metadata_class": {
          "default": "User",
          "description": "Registry key for the metadata implementation class",
          "title": "Metadata Class",
          "type": "string"
        },
        "query_params": {
          "description": "Additional parameters for metadata plugins",
          "title": "Query Params",
          "type": "object"
        },
        "type": {
          "default": "User",
          "description": "Legacy field for backward compatibility (alias for metadata_class)",
          "title": "Type",
          "type": "string"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Metadata model version",
          "title": "Version"
        }
      },
      "title": "DIRAC Metadata Descriptor",
      "type": "object"
    },
    "TaskDescriptionModel": {
      "additionalProperties": false,
      "description": "Description of a task (job/transformation/production step).\n\nThis class extends the core TaskDescriptor with additional methods\nfor CWL integration and backward compatibility.\n\nParameters\n----------\nplatform : str | None\n    Target platform name (for example ``\"DIRAC\"``). If ``None``, no\n    platform preference is encoded.\npriority : int, optional\n    Scheduling priority. Higher values indicate higher priority.\n    Defaults to ``10``.\nsites : list[str] | None\n    Optional list of candidate site names where the task may run.\n\nNotes\n-----\nThis is a serialisable Pydantic descriptor intended to carry CWL hints\nrelated to runtime placement and scheduling. Prefer using the class\nfactory ``TaskDescriptionModel.from_hints(cwl)`` when extracting hints\nfrom parsed CWL objects.",
      "properties": {
        "platform": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Target platform (e.g., 'DIRAC', 'DIRACX')",
          "title": "Platform"
        },
        "priority": {
          "default": 10,
          "description": "Job priority (higher values = higher priority)",
          "title": "Priority",
          "type": "integer"
        },
        "sites": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Candidate execution sites",
          "title": "Sites"
        }
      },
      "title": "TaskDescriptionModel",
      "type": "object"
    }
  },
  "description": "Job definition sent to the router.",
  "properties": {
    "description": {
      "$ref": "#/$defs/TaskDescriptionModel"
    },
    "metadata": {
      "$ref": "#/$defs/MetadataDescriptor"
    },
    "parameters": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/$defs/JobParameterModel"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Parameters"
    },
    "task": {
      "anyOf": [],
      "title": "Task"
    }
  },
  "required": [
    "task",
    "description",
    "metadata"
  ],
  "title": "JobSubmissionModel",
  "type": "object"
}