name: Generate Schemas

on:
  push:
    branches:
      - main
      - refactor_metadata  # Add current branch for testing
    paths:
      - 'src/dirac_cwl_proto/metadata/**'
      - 'src/dirac_cwl_proto/submission_models.py'
      - 'scripts/generate_schemas.py'
  pull_request:
    branches:
      - main
    paths:
      - 'src/dirac_cwl_proto/metadata/**'
      - 'src/dirac_cwl_proto/submission_models.py'
      - 'scripts/generate_schemas.py'
  workflow_dispatch:  # Allow manual triggering

defaults:
  run:
    shell: bash -el {0}

jobs:
  generate-schemas:
    name: Generate JSON Schemas from Pydantic Models
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Need full history for proper git operations
          fetch-depth: 0
          # Use a token that can push to the repository
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: schema-gen-env
          create-args: >-
            python=3.12
            pip
          init-shell: bash
          post-cleanup: 'all'
      
      - name: Install dependencies
        run: |
          pip install .
          pip install pyyaml  # Additional dependency for YAML schema output
      
      - name: Generate schemas
        run: |
          echo "Generating JSON schemas from Pydantic models..."
          python scripts/generate_schemas.py
      
      - name: Copy schemas to test locations
        run: |
          echo "Copying generated schemas to test locations..."
          # Update test meta schemas from the generated output
          cp generated_schemas/dirac-metadata.json test/workflows/test_meta/schemas/dirac-metadata.json
          cp generated_schemas/plugins-summary.json test/workflows/test_meta/schemas/plugins-summary.json
          echo "Updated test schemas"
      
      - name: Check for schema changes
        id: check_changes
        run: |
          # Configure git for the CI user
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are changes in the test schemas
          if git diff --quiet test/workflows/test_meta/schemas/; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No schema changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Schema changes detected"
            git diff --name-only test/workflows/test_meta/schemas/
          fi
      
      - name: Commit and push schema changes
        if: steps.check_changes.outputs.changes == 'true' && github.event_name == 'push'
        run: |
          echo "Committing schema changes..."
          git add test/workflows/test_meta/schemas/
          git commit -m "Auto-generate schemas from Pydantic models

          This commit contains automatically generated JSON schemas from:
          - Core metadata models
          - Submission models  
          - All registered metadata plugins
          
          Generated by: ${{ github.workflow }} workflow
          Triggered by: ${{ github.event_name }}
          Commit: ${{ github.sha }}"
          
          # Push the changes
          git push
      
      - name: Verify schemas are valid
        run: |
          echo "Verifying generated schemas..."
          python -c "
          import json
          from pathlib import Path
          
          # Verify JSON schemas in test directory
          json_schemas = list(Path('test/workflows/test_meta/schemas').glob('**/*.json'))
          for schema_file in json_schemas:
              try:
                  with open(schema_file) as f:
                      json.load(f)
                  print(f'✓ Valid JSON: {schema_file}')
              except Exception as e:
                  print(f'✗ Invalid JSON: {schema_file} - {e}')
                  exit(1)
          
          print(f'All schemas are valid! Verified {len(json_schemas)} JSON files.')
          "
      
      - name: Upload schema artifacts
        uses: actions/upload-artifact@v4
        with:
          name: generated-schemas
          path: |
            test/workflows/test_meta/schemas/
          retention-days: 90
      
  test-with-generated-schemas:
    name: Test with Generated Schemas
    needs: generate-schemas
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: test-env
          create-args: >-
            python=3.12
            pip
          init-shell: bash
          post-cleanup: 'all'
      
      - name: Install dependencies
        run: |
          pip install .[testing]
      
      - name: Download generated schemas
        uses: actions/download-artifact@v4
        with:
          name: generated-schemas
          path: test/workflows/test_meta/schemas/
      
      - name: Run tests with generated schemas
        run: |
          echo "Running tests with generated schemas..."
          # Test the specific workflows that use schemas
          pytest test/test_workflows.py::test_run_job_success -k "test_meta" -v
          
          # Run a broader test to ensure nothing broke
          pytest test/test_workflows.py -v